---
import { getCollection, type CollectionEntry } from 'astro:content';
import FaqItem from './ui/FaqItem.astro'; // ajuste le chemin si besoin

// 1) On récupère et trie
const entries = await getCollection('faq');
const items: Array<CollectionEntry<'faq'>> = entries
  .slice()
  .sort((a, b) => (a.data.order ?? 999) - (b.data.order ?? 999));

// 2) On "render" chaque entrée pour récupérer le composant Content
const rendered = await Promise.all(
  items.map(async (entry) => {
    const { Content } = await entry.render();
    return { entry, Content };
  })
);
---

<section id="faq" aria-labelledby="faq-title" class="mx-auto max-w-3xl px-4 py-16 scroll-m-4" data-faq-root>
  <h2 id="faq-title" class="text-center text-2xl md:text-3xl font-medium text-text">FAQ</h2>
  <p class="text-center mt-4 md:mx-12 text-gray-800">
    Les réponses aux questions que l’on nous pose le plus souvent — emballages personnalisés & web.
  </p>

  <div id="faq-list" class="mt-8 grid gap-4">
    {rendered.map(({ entry, Content }) => (
      <FaqItem question={entry.data.question} icon="lucide:chevron-left">
        <Fragment slot="answer">
          <Content />
        </Fragment>
      </FaqItem>
    ))}
  </div>

  <!-- JSON-LD SEO : FAQPage -->
  <script type="application/ld+json">
  {JSON.stringify({
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": items.map(({ data }) => ({
      "@type": "Question",
      "name": data.question,
      "acceptedAnswer": { "@type": "Answer", "text": data.answer }
    }))
  })}
  </script>

  <!-- Un seul dropdown ouvert à la fois -->
  <script is:inline>
    (function () {
      const root = document.currentScript.closest('[data-faq-root]');
      if (!root) return;
      const items = Array.from(root.querySelectorAll('details'));
      items.forEach((d) => {
        d.addEventListener('toggle', () => {
          if (d.open) items.forEach((x) => x !== d && (x.open = false));
        });
      });
    })();
  </script>
</section>

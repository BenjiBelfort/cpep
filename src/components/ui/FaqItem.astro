---
/** Props:
 *  question: string
 *  answer?: string   // optionnel si slot "answer" fourni (MDX)
 *  defaultOpen?: boolean
 *  icon?: string
 */
import { Icon } from 'astro-icon/components';

interface Props {
  question: string;
  answer?: string;
  defaultOpen?: boolean;
  icon?: string;
}
const { question, answer, defaultOpen = false, icon = 'lucide:chevron-left' } = Astro.props as Props;
const uid = `faq-${question.toLowerCase().replace(/[^a-z0-9]+/g,'-')}`;
---

<details
  class="group border border-bg-alt rounded-xl bg-white overflow-hidden transition-colors duration-200 hover:border-accent [&[open]]:border-accent"
  open={defaultOpen}
>
  <summary
    class="flex items-center justify-between gap-4 cursor-pointer select-none px-4 py-3 list-none
           focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-accent"
    aria-controls={uid}
  >
    <h3 class="text-base md:text-lg font-semibold text-gray-900 m-0">{question}</h3>
    <Icon name={icon} class="faq-arrow w-5 h-5 shrink-0 transition-transform duration-200 ease-out text-primary rotate-0 group-open:-rotate-90" aria-hidden="true" />
  </summary>

  <!-- Slide-down -->
  <div class="grid grid-rows-[0fr] group-open:grid-rows-[1fr] transition-[grid-template-rows] duration-300 ease-out">
    <div id={uid} class="overflow-hidden px-4 pb-4 pt-0 text-sm md:text-base text-text">
      {Astro.slots.has('answer') ? (
        <div class="space-y-3 [&_ul]:list-disc [&_ul]:pl-5 [&_strong]:text-gray-800 [&_a]:underline [&_a]:decoration-accent [&_a]:underline-offset-4">
          <slot name="answer" />
        </div>
      ) : (
        answer
      )}
    </div>
  </div>
</details>

